// Generated by view binder compiler. Do not edit!
package com.example.rotations_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rotations_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemsRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPassword;

  private ItemsRowBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivDelete,
      @NonNull ImageView ivEdit, @NonNull LinearLayout llMain, @NonNull TextView tvId,
      @NonNull TextView tvName, @NonNull TextView tvPassword) {
    this.rootView = rootView;
    this.ivDelete = ivDelete;
    this.ivEdit = ivEdit;
    this.llMain = llMain;
    this.tvId = tvId;
    this.tvName = tvName;
    this.tvPassword = tvPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemsRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemsRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.items_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemsRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.ivEdit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      LinearLayout llMain = (LinearLayout) rootView;

      id = R.id.tvId;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPassword;
      TextView tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      return new ItemsRowBinding((LinearLayout) rootView, ivDelete, ivEdit, llMain, tvId, tvName,
          tvPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
