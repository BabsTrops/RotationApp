// Generated by view binder compiler. Do not edit!
package com.example.rotations_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rotations_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGrundBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button GUeber;

  @NonNull
  public final Button GUnter;

  @NonNull
  public final Button KUeber;

  @NonNull
  public final Button KUnter;

  @NonNull
  public final TextView confirmPress;

  private ActivityGrundBinding(@NonNull LinearLayout rootView, @NonNull Button GUeber,
      @NonNull Button GUnter, @NonNull Button KUeber, @NonNull Button KUnter,
      @NonNull TextView confirmPress) {
    this.rootView = rootView;
    this.GUeber = GUeber;
    this.GUnter = GUnter;
    this.KUeber = KUeber;
    this.KUnter = KUnter;
    this.confirmPress = confirmPress;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGrundBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGrundBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_grund, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGrundBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.GUeber;
      Button GUeber = ViewBindings.findChildViewById(rootView, id);
      if (GUeber == null) {
        break missingId;
      }

      id = R.id.GUnter;
      Button GUnter = ViewBindings.findChildViewById(rootView, id);
      if (GUnter == null) {
        break missingId;
      }

      id = R.id.KUeber;
      Button KUeber = ViewBindings.findChildViewById(rootView, id);
      if (KUeber == null) {
        break missingId;
      }

      id = R.id.KUnter;
      Button KUnter = ViewBindings.findChildViewById(rootView, id);
      if (KUnter == null) {
        break missingId;
      }

      id = R.id.confirm_press;
      TextView confirmPress = ViewBindings.findChildViewById(rootView, id);
      if (confirmPress == null) {
        break missingId;
      }

      return new ActivityGrundBinding((LinearLayout) rootView, GUeber, GUnter, KUeber, KUnter,
          confirmPress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
